class Solution {
public:
    int findDuplicate(vector<int>& nums) {
        int fast = nums[nums[0]], slow = nums[0];
        if(nums.size() > 1) {
            while(fast != slow) {
                fast = nums[nums[fast]];
                slow = nums[slow];
            }
            fast = 0;
            while(fast != slow) {
                fast = nums[fast];
                slow = nums[slow];
            }
            return fast;
        }
        return -1;
    }
};


class Solution2 {
public:
    int findDuplicate(vector<int>& nums) {
        int ret = 0;
        for(int i=0; i < 31; i++)
        {
            int a = 0;
            int b = 0;
            for(int j=0; j < nums.size(); j++)
            {
                if(nums[j] >> i & 1)
                {
                    a += 1;
                }
                if(j >> i & 1)
                {
                    b += 1;
                }
            }
            if(a > b)
            {
                ret |= 1 << i;
            }
        }
        return ret;
    }
};
